{"version":3,"sources":["js/index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","body","document","querySelector","menuBtn","menu","menuNav","navItems","querySelectorAll","showMenu","toggleMenu","classList","remove","forEach","item","add","addEventListener","firstElementChild","TypeWriter","txtElement","words","wait","txt","wordIndex","parseInt","type","isDeleting","init","JSON","parse","getAttribute","getInputValue","id","getElementById","value","submitFrom","e","preventDefault","saveMessage","showAlert","reset","prototype","current","length","fullTxt","substring","innerHTML","typeSpeed","setTimeout","messagesRef","database","ref","name","email","message","push","set","className","alterMessage","createElement","appendChild","createTextNode","section","main","insertBefore"],"mappings":"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","file":"js.578a2caf.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable */\n\n////////////////////////// firebaseConfig ////////////////////////\n/////////////////////////////////////////////////////////////////\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyBe6Pw_F6hr2kywHS_FJXa5JrNZVYCyijU',\n  authDomain: 'portfoliocontactform-beb39.firebaseapp.com',\n  databaseURL: 'https://portfoliocontactform-beb39.firebaseio.com',\n  projectId: 'portfoliocontactform-beb39',\n  storageBucket: 'portfoliocontactform-beb39.appspot.com',\n  messagingSenderId: '87529637836',\n  appId: '1:87529637836:web:68b29936dab1e3e474ff69',\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n////////////////////////// Menu /////////////////////////////////\n/////////////////////////////////////////////////////////////////\n\nconst body = document.querySelector('#body'); // Menu Button\n\nconst menuBtn = document.querySelector('.menu-btn'); // Menu Button\nconst menu = document.querySelector('.menu'); // Menu Wrapper\nconst menuNav = document.querySelector('.menu-nav'); // Nav Section\nconst navItems = document.querySelectorAll('.nav-item'); // Nav List\n\n// Set Initail State of Menu\nlet showMenu = false;\n\nconst toggleMenu = () => {\n  if (!showMenu) {\n    menuBtn.classList.add('close');\n    menu.classList.add('show');\n    menuNav.classList.add('show');\n    menu.classList.add('show');\n    navItems.forEach((item) => item.classList.add('show'));\n\n    showMenu = true; // Set Menu Off\n  } else {\n    menuBtn.classList.remove('close');\n    menu.classList.remove('show');\n    menuNav.classList.remove('show');\n    menu.classList.remove('show');\n    navItems.forEach((item) => item.classList.remove('show'));\n\n    showMenu = false; // Set Menu On\n  }\n};\n\n// Menu Button Onclick call toggleMenu\nmenuBtn.addEventListener('click', toggleMenu);\n\n// On click on each link also call toggleMenu\nnavItems.forEach((item) =>\n  item.firstElementChild.addEventListener('click', toggleMenu)\n);\n\n////////////////////////// Type Method ////////////////////////////////\n///////////////////////////////////////////////////////////////////////\n\nconst TypeWriter = function (txtElement, words, wait = 3000) {\n  this.txtElement = txtElement;\n  this.words = words;\n  this.txt = '';\n  this.wordIndex = 0;\n  this.wait = parseInt(wait, 10);\n  this.type();\n  this.isDeleting = false;\n};\n\nTypeWriter.prototype.type = function () {\n  // Current index of words\n  const current = this.wordIndex % this.words.length;\n  // Get full text of current word\n  const fullTxt = this.words[current];\n\n  // Check if deleting\n  if (this.isDeleting) {\n    // remove char\n    this.txt = fullTxt.substring(0, this.txt.length - 1);\n  } else {\n    // Add char\n    this.txt = fullTxt.substring(0, this.txt.length + 1);\n  }\n\n  // insert txt into element\n  this.txtElement.innerHTML = `<span class=\"txt\"> ${this.txt}</span>`;\n\n  // Type speed\n  let typeSpeed = 300;\n\n  if (this.isDeleting) {\n    typeSpeed = 100;\n  }\n\n  // if word is complete\n  if (!this.isDeleting && this.txt === fullTxt) {\n    // Make pause at end\n    typeSpeed = this.wait;\n\n    // set delete to true\n    this.isDeleting = true;\n  } else if (this.isDeleting && this.txt === '') {\n    this.isDeleting = false;\n    // Move to next word\n    this.wordIndex++;\n    //pause before start typing\n    typeSpeed = 100;\n  }\n\n  setTimeout(() => this.type(), typeSpeed);\n};\n\n// On DOMContentLoaded call init\ndocument.addEventListener('DOMContentLoaded', init);\n\nfunction init() {\n  const txtElement = document.querySelector('.txt-type');\n  const words = JSON.parse(txtElement.getAttribute('data-words'));\n\n  const wait = txtElement.getAttribute('data-wait'); // getAttribute waitTime\n\n  // Init TypeWriter\n  new TypeWriter(txtElement, words, wait);\n}\n\n////////////////////////// Contact Form /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////\n\n// Conatact Form on Submit call submitFrom\n\ndocument.getElementById('contactform').addEventListener('submit', submitFrom);\n\n// function to get Input Value\nfunction getInputValue(id) {\n  return document.getElementById(id).value;\n}\n\nfunction submitFrom(e) {\n  e.preventDefault();\n\n  var userName = getInputValue('userName');\n  var userEmail = getInputValue('userEmail');\n  var userMessage = getInputValue('userMessage');\n\n  // Send data to firebase\n  saveMessage(userName, userEmail, userMessage);\n\n  // Notify Message Sent\n  showAlert('Message Sent', 'alert');\n\n  // reset form input\n  document.getElementById('contactform').reset();\n}\n\n////////////////////////// FireBase DB //////////////////////////\n/////////////////////////////////////////////////////////////////\n\n// Creating a table / Ref\nvar messagesRef = firebase.database().ref('messages');\n\n// save message to firebase\nfunction saveMessage(name, email, message) {\n  // send data to table message\n  var newMessageRef = messagesRef.push();\n  // set data\n  newMessageRef.set({\n    name: name,\n    email: email,\n    message: message,\n  });\n}\n\n////////////////////////// Show Message //////////////////////////\n/////////////////////////////////////////////////////////////////\n\nfunction showAlert(message, className) {\n  if (document.querySelector('.alert')) {\n    // If message already exist do nothing\n  } else {\n    // else\n    const alterMessage = document.createElement('div'); // create a div\n    alterMessage.className = `alert ${className}`; // Add class to the div\n    alterMessage.appendChild(document.createTextNode(message)); // Create textNode and append it to the div\n\n    const section = document.querySelector('.con-section-b');\n    const main = document.querySelector('#contactform');\n    section.insertBefore(alterMessage, main); // insert the div between section and main element\n\n    // Vanish in 3 seconds\n    setTimeout(function () {\n      alterMessage.className = 'remove'; // set class name to remove\n    }, 2000);\n\n    setTimeout(() => document.querySelector('.remove').remove(), 3500); // delete element with remove class name\n  }\n}\n"]}